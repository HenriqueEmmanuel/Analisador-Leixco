import os
from analisador import Analisador 
from criaArquivo import CriaArquivo

def main():
    caminho_entrada = "teste.txt"  # Caminho do arquivo de entrada

    # Verifica se o arquivo existe antes de tentar abri-lo
    if not os.path.exists(caminho_entrada):
        print(f"Erro: O arquivo {caminho_entrada} não foi encontrado.")
        return

    try:
        # Lê e exibe o conteúdo do arquivo
        with open(caminho_entrada, 'r') as arquivo:
            conteudo = arquivo.read()
            print("Conteúdo do arquivo lido:")
            print(conteudo)  # Exibe o conteúdo do arquivo no terminal
    except Exception as e:
        print(f"Erro ao ler o arquivo {caminho_entrada}: {e}")
        return  # Encerra a execução caso ocorra um erro ao ler o arquivo

    # Inicializa o analisador léxico
    anas = Analisador(caminho_entrada)
    anas.analisador_lexico()  # Executa a análise léxica
    anas.agrupa_tokens()      # Agrupa os tokens gerados

    # Criação do arquivo de saída para gravar os tokens
    ca = CriaArquivo()
    ca.escreve_arquivo("Token \t Simbolo \t Posição no Código(Linha)\n")
    for token_agrupado in anas.get_tokens_agrupados():
        print(token_agrupado)  # Imprime os tokens no terminal
        ca.escreve_arquivo(token_agrupado)  # Salva os tokens no arquivo de saída

    # Gera e exibe a outra forma de saída
    outra_forma = anas.outra_forma()
    print("\nOutra forma de saída:")
    print(outra_forma)  # Exibe a outra forma de saída no terminal
    ca.escreve_arquivo(outra_forma)  # Salva a outra forma no arquivo de saída

    # Fecha o arquivo de saída
    ca.fecha_arquivo()

if __name__ == "__main__":
    main()
